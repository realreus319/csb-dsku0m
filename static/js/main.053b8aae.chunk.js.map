{"version":3,"sources":["App.tsx","index.tsx"],"names":["DefaultScale","Vector3","BiggerScale","SpinningBox","props","boxRef","useRef","_useState","useState","_useState2","_slicedToArray","clicked","setClicked","useClick","_useState3","_useState4","hovered","setHovered","useHover","useBeforeRender","scene","current","deltaTimeInMillis","getEngine","getDeltaTime","rotation","y","Math","PI","_jsx","name","ref","size","position","scaling","children","concat","diffuseColor","hoveredColor","color","specularColor","Color3","Black","SceneWithSpinningBoxes","Engine","antialias","adaptToDeviceRatio","canvasId","_jsxs","Scene","target","Zero","alpha","beta","radius","intensity","direction","Up","FromHexString","App","className","rootElement","document","getElementById","render"],"mappings":"sNAeMA,EAAe,IAAIC,IAAQ,EAAG,EAAG,GACjCC,EAAc,IAAID,IAAQ,KAAM,KAAM,MAStCE,EAAc,SAACC,GAEnB,IAAMC,EAASC,iBAAa,MAE5BC,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,aAAS,kBAAMD,GAAW,SAACD,GAAO,OAAMA,CAAO,GAAC,GAAEN,GAElD,IAAAS,EAA8BN,oBAAS,GAAMO,EAAAL,YAAAI,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,aACE,kBAAMD,GAAW,EAAK,IACtB,kBAAMA,GAAW,EAAM,GACvBZ,GAcF,OATAc,aAAgB,SAACC,GACf,GAAIf,EAAOgB,QAAS,CAElB,IAAIC,EAAoBF,EAAMG,YAAYC,eAC1CnB,EAAOgB,QAAQI,SAASC,GALhB,EAMC,GAAMC,KAAKC,GAAK,GAAKN,EAAoB,IACpD,CACF,IAGEO,cAAA,OACEC,KAAM1B,EAAM0B,KACZC,IAAK1B,EACL2B,KAAM,EACNC,SAAU7B,EAAM6B,SAChBC,QAASvB,EAAUT,EAAcF,EAAamC,SAE9CN,cAAA,oBACEC,KAAI,GAAAM,OAAKhC,EAAM0B,KAAI,QACnBO,aAAcrB,EAAUZ,EAAMkC,aAAelC,EAAMmC,MACnDC,cAAeC,IAAOC,WAI9B,EAEaC,EAAyB,WAAH,OACjCd,cAAA,OAAAM,SACEN,cAACe,IAAM,CAACC,WAAS,EAACC,oBAAkB,EAACC,SAAS,iBAAgBZ,SAC5Da,eAACC,IAAK,CAAAd,SAAA,CACJN,cAAA,mBACEC,KAAK,UACLoB,OAAQjD,IAAQkD,OAChBC,MAAOzB,KAAKC,GAAK,EACjByB,KAAM1B,KAAKC,GAAK,EAChB0B,OAAQ,IAEVzB,cAAA,oBACEC,KAAK,SACLyB,UAAW,GACXC,UAAWvD,IAAQwD,OAErB5B,cAAC1B,EAAW,CACV2B,KAAK,OACLG,SAAU,IAAIhC,KAAS,EAAG,EAAG,GAC7BsC,MAAOE,IAAOiB,cAAc,WAC5BpB,aAAcG,IAAOiB,cAAc,aAErC7B,cAAC1B,EAAW,CACV2B,KAAK,QACLG,SAAU,IAAIhC,IAAQ,EAAG,EAAG,GAC5BsC,MAAOE,IAAOiB,cAAc,WAC5BpB,aAAcG,IAAOiB,cAAc,mBAIrC,EAGO,SAASC,IACtB,OACEX,eAAA,OAAKY,UAAU,MAAKzB,SAAA,CAClBN,cAAA,MAAAM,SAAI,sBACJN,cAAA,MAAAM,SAAI,4CACJN,cAACc,EAAsB,MAG7B,CCxGA,IAAMkB,EAAcC,SAASC,eAAe,QAC5CC,iBAAOnC,cAAC8B,EAAG,IAAKE,E","file":"static/js/main.053b8aae.chunk.js","sourcesContent":["import \"./styles.css\";\n\nimport React, { useRef, useState } from \"react\";\nimport {\n  Engine,\n  Scene,\n  useBeforeRender,\n  useClick,\n  useHover\n} from \"react-babylonjs\";\n\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color\";\n\nconst DefaultScale = new Vector3(1, 1, 1);\nconst BiggerScale = new Vector3(1.25, 1.25, 1.25);\n\ntype SpinningBoxProps = {\n  name: string;\n  position: Vector3;\n  hoveredColor: Color3;\n  color: Color3;\n};\n\nconst SpinningBox = (props: SpinningBoxProps) => {\n  // access Babylon scene objects with same React hook as regular DOM elements\n  const boxRef = useRef<Mesh>(null);\n\n  const [clicked, setClicked] = useState(false);\n  useClick(() => setClicked((clicked) => !clicked), boxRef);\n\n  const [hovered, setHovered] = useState(false);\n  useHover(\n    () => setHovered(true),\n    () => setHovered(false),\n    boxRef\n  );\n\n  // This will rotate the box on every Babylon frame.\n  const rpm = 5;\n  useBeforeRender((scene) => {\n    if (boxRef.current) {\n      // Delta time smoothes the animation.\n      var deltaTimeInMillis = scene.getEngine().getDeltaTime();\n      boxRef.current.rotation.y +=\n        (rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000);\n    }\n  });\n\n  return (\n    <box\n      name={props.name}\n      ref={boxRef}\n      size={2}\n      position={props.position}\n      scaling={clicked ? BiggerScale : DefaultScale}\n    >\n      <standardMaterial\n        name={`${props.name}-mat`}\n        diffuseColor={hovered ? props.hoveredColor : props.color}\n        specularColor={Color3.Black()}\n      />\n    </box>\n  );\n};\n\nexport const SceneWithSpinningBoxes = () => (\n  <div>\n    <Engine antialias adaptToDeviceRatio canvasId=\"babylon-canvas\">\n      <Scene>\n        <arcRotateCamera\n          name=\"camera1\"\n          target={Vector3.Zero()}\n          alpha={Math.PI / 2}\n          beta={Math.PI / 4}\n          radius={8}\n        />\n        <hemisphericLight\n          name=\"light1\"\n          intensity={0.7}\n          direction={Vector3.Up()}\n        />\n        <SpinningBox\n          name=\"left\"\n          position={new Vector3(-2, 0, 0)}\n          color={Color3.FromHexString(\"#EEB5EB\")}\n          hoveredColor={Color3.FromHexString(\"#C26DBC\")}\n        />\n        <SpinningBox\n          name=\"right\"\n          position={new Vector3(2, 0, 0)}\n          color={Color3.FromHexString(\"#C8F4F9\")}\n          hoveredColor={Color3.FromHexString(\"#3CACAE\")}\n        />\n      </Scene>\n    </Engine>\n  </div>\n);\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <h2>Start editing to see some magic happen!</h2>\n      <SceneWithSpinningBoxes />\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}